#version 460

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require

#define NUM_THREADS_X 8
#define NUM_THREADS_Y 4

// ------------------------------------------------------------------
// INPUTS -----------------------------------------------------------
// ------------------------------------------------------------------

layout(local_size_x = NUM_THREADS_X, local_size_y = NUM_THREADS_Y, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform usampler2D inputImage;
layout(set = 0, binding = 1, rg16f) uniform writeonly image2D outputImage;

void main()
{
    const ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    uint visibility = texelFetch(inputImage, coord, 0).x;

    vec3 outColor = vec3(0.0f);

    if (visibility > 0)
    {
        outColor = vec3(1.0f, 0.0f, 0.0f);
    }
    else if (visibility > 10)
    {
        outColor = vec3(0.0f, 0.0f, 1.0f);
    }

    imageStore(outputImage, coord, vec4(outColor.xyz, 0.0f));
}